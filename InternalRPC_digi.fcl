#
# internal RPC with a flat bistrlich photon energy spectrum
#
#include "JobConfig/primary/prolog.fcl"

process_name: InternalRPC

source: { module_type : EmptyEvent }
services: @local::Services.Sim
physics : { 
  producers : {
    generate : @local::EventGenerator.producers.RPCGun
    @table::Primary.producers
    genEventCount : {
                module_type : GenEventCounter
            }
  }
  filters: { 
        @table::Primary.filters 
        detectorFilter : {
            module_type    : FilterStepPointMomentum
            inputs         : [ "g4run:tracker" ]
            cutMomentumMin : 0. // MeV/c CHNGED THIS
        }
         
  }
  analyzers: { @table::Primary.analyzers }
  TriggerPath : [ generate, genEventCount, g4run, detectorFilter ]
  EndPath : @local::Primary.EndPath
}
outputs : {
    Output :@local::Primary.Output
    rootout : {
        module_type  : RootOutput
        SelectEvents : ["TriggerPath"]
        fileName     : "sim.owner.pions-g4s4-RPCInternalDigi.version.sequencer.art"
        outputCommands: ["drop _*_*_*", "keep mu2e::*_*_*_*" ]
        
    }
}

#include "JobConfig/primary/epilog.fcl"
physics.producers.generate.physics.generateIntConversion : 1
physics.producers.generate.physics.spectrumShape : "Bistirlich"
physics.producers.generate.physics.elow : 1.0
physics.producers.generate.physics.ehi  : 140
physics.producers.generate.physics.doHistograms : true
physics.filters.DigiFilter.MinParticleMom : 10.0

physics.producers.generate.pionStops.inputFiles: ["StoppedPions_1e9POT_oldGeom.root"]
physics.producers.generate.pionStops.averageNumRecordsToUse : 500000
physics.producers.generate.pionStops.treeName : "stoppedPionDumper/stops"
physics.producers.generate.pionStops.branchName : "stops"
physics.producers.generate.tmin  : 450 
physics.producers.protonTimeMap.FixedModule   : "generate" 
# customize the output
services.TFileService.fileName: "nts.owner.internalRPC.version.sequencer.root"
outputs.Output.fileName: "dig.owner.internalRPC.version.sequencer.art"
physics.end_paths : [ EndPath] # needed for generate_fcl
services.scheduler.wantSummary: true
